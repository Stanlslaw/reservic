version: "3.8"
name: reservic

services:
  client:
    image: client
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
    build:
      context: ./client
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CLIENT_PORT=${CLIENT_PORT}
      - API_URL=${API_URL}
    depends_on:
      - api
    volumes:
      - ./shared:/shared
      - ./client:/app
      - /app/node_modules

  provider_client:
    image: provider_client
    ports:
      - "${PROVIDER_CLIENT_PORT}:${PROVIDER_CLIENT_PORT}"
    build:
      context: ./provider_client
    environment:
      - CHOKIDAR_USEPOLLING=true
      - PROVIDER_CLIENT_PORT=${PROVIDER_CLIENT_PORT}
      - API_URL=${API_URL}
    depends_on:
      - api
    volumes:
      - ./shared:/shared
      - ./provider_client:/app
      - /app/node_modules

  api:
    image: api
    ports:
      - "${API_PORT}:${API_PORT}"
    build:
      context: ./api
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./shared:/shared
      - ./api:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - API_PORT=${API_PORT}
      - BOT_TOKEN=${BOT_TOKEN}
      - BOT_PROVIDER_TOKEN=${BOT_PROVIDER_TOKEN}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE_NAME}
      - POSTGRES_PORT=${POSTGRES_PORT}

  database:
    image: postgres:17.4
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data

  cloudflare:
    image: cloudflare/cloudflared:2025.4.0
    restart: unless-stopped
    command: tunnel run reservic
    volumes:
      - ./cloudflared/cert.pem:/etc/cloudflared/cert.pem
      - ./cloudflared/config.yaml:/etc/cloudflared/config.yaml
      - ./cloudflared/credentials.json:/etc/cloudflared/credentials.json
    depends_on:
      - api
      - client
      - provider_client
    environment:
      - TUNNEL_CERT=/etc/cloudflared/cert.pem
      - TUNNEL_CONFIG=/etc/cloudflared/config.yaml
      - TUNNEL_JSON=/etc/cloudflared/credentials.json
volumes:
  db_data:

networks:
  app-network:
    driver: bridge
